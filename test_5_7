#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//int main() {
//	int a[10][10];
//	for (int i = 0; i < 10; i++)//数组设为0
//		for (int j = 0; j < 10; j++)
//			a[i][j] = 0;
//	for (int i = 0; i < 10; i++)//初始第一行设为1
//		a[i][0] = 1;
//	for (int i = 1;i<10;i++)//核心公式
//		for (int j = 1; j < 10; j++)
//			a[i][j] = a[i - 1][j] + a[i - 1][j - 1];
//	for (int i = 0; i < 10; i++) {//输出
//		for (int j = 0; j < 10; j++) {
//			if (a[i][j] != 0)//为0不输出
//				printf("%5d", a[i][j]);
//		}
//		putchar('\n');
//	}
//
//	return 0;
//


//int main() {
//	int a[15][15];
//	int x = 1, y, z, i, j;
//	while (x == 1) {
//		scanf("%d", &y);
//		if ((y != 0) && (y <= 15) && (y % 2 != 0))
//			x = 0;
//		if(x==1)
//			printf("error\n");
//	}
//	for (int i = 1; i <= y; i++)//初始化
//		for (int j = 1; j <= y; j++)
//			a[i][j] = 0;
//	a[i = 1][j = y / 2 + 1] = 1;//设立初始1的位置
//	for (int n = 2; n <= y * y; n++) {
//		i = i - 1;//基本变化规则
//		j = j + 1;//
//		if (i<1 && j>y) {//如果上一个数位置为右上角时
//			i = i + 2;//坐标为前一个的下方
//			j = j - 1;
//		}
//		else {//其他情况
//			if (i < 1)
//				i = y;
//			if (j > y)
//				j = 1;
//		}
//		if (a[i][j] == 0)//如果当前位置没有数
//			a[i][j] = n;
//		else {//否则位置向下移动一位
//			i = i + 2;
//			j = j - 1;
//			a[i][j] = n;
//		}
//	}
//	for (int i = 1; i <= y; i++) {//输出
//		for (int j = 1; j <= y; j++)
//			printf("%5d", a[i][j]);
//		putchar('\n');
//	}
//	return 0;
//}


//int main() {
//	/*for (int i = 0, n = 1; i < 10; i++)
//		for (int j = 0; j < 10; j++, n++)
//			a[i][j] = n;*/
//	int a[5][5] = { {7,1,8,2,1},{6,5,7,6,8},{1,3,4,2,1},{5,4,8,1,3},{6,9,6,2,4} };
//	int max1 = 0, max2 = 0;
//	int x=0, y=0;
//	for (int i = 0, j = 0, max = a[i][j],m=0;;m++) {
//		for (; j<5; j++) {
//			if (max < a[i=x][j]) {
//				max = a[i=x][j];
//				y = j;
//			}
//			max1 = max;
//		}
//		for (;i<5;i++) {
//			if (max > a[i][j=y]) {
//				max = a[i][j = y];
//				x = i;
//			}
//			max2 = max;
//		}
//		if (max1 == max2)
//			goto aa;
//		if (m > 100)
//			goto bb;
//	}	
//aa:
//	for (int i = 0, n = 1; i < 5; i++) {
//		for (int j = 0; j < 5; j++)
//			printf("%-3d", a[i][j]);
//		putchar('\n');
//	}
//	printf("该数组鞍点为%d\n鞍点下标为", max1);
//	printf("%d %d\n", x, y);
//	return 0;
//bb:
//	printf("该数组没有鞍点");
//	return 0;
//}
